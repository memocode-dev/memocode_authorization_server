# application.yml은 수정하지 마세요!
server:
  servlet:
    session:
      cookie:
        name: m_a_s_i
        path: /
        http-only: true
        secure: true
  port: 9000

spring:
  profiles:
    active: local
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: "SECRET"
    username: ${DB_USERNAME:SECRET}
    password: ${DB_PASSWORD:SECRET}
  threads:
    virtual:
      enabled: true
  data:
    redis:
      repositories:
        enabled: true
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:1234}
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  sql:
    init:
      mode: never
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "SECRET"
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID:SECRET}
            redirect-uri: "REDIRECT_URI" # secret
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
      authorizationserver:
        client:
          public-client:
            token:
              reuse-refresh-tokens: false
              access-token-time-to-live: 5m
              refresh-token-time-to-live: 30d
            registration:
              client-name: "public-client"
              client-id: ${PUBLIC_CLIENT_CLIENT_ID:SECRET}
              client-secret: ${PUBLIC_CLIENT_CLIENT_SECRET:SECRET}
              client-authentication-methods:
                - "client_secret_basic"
                - "client_secret_post"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "SECRET"
              post-logout-redirect-uris:
                - "SECRET"
              scopes:
                - "openid"
            require-authorization-consent: false
            require-proof-key: true
  kafka:
    topic:
      users: "SECRET"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: "SECRET"
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      bootstrap-servers: "SECRET"
      auto-offset-reset: "earliest"

# logging
logging:
  level:
    org.springframework.security: info

decorator:
  datasource:
    p6spy:
      enable-logging: false

custom:
  front:
    domain: "SECRET"
    domain2: "SECRET"

########## springdoc ##########
springdoc:
  api-docs:
    path: /api/token/api-docs