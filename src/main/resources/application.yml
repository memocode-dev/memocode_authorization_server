server:
  servlet:
    session:
      cookie:
        name: m_a_s_i
        path: /
        http-only: true
        secure: true
  port: 9000

spring:
  profiles:
    active: local
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: "SECRET"
    username: "SECRET"
    password: "SECRET"
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
  sql:
    init:
      mode: never
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "SECRET"
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
        registration:
          kakao:
            client-id: "CLIENT_ID" # secret
            redirect-uri: "REDIRECT_URI" # secret
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
      authorizationserver:
        client:
          public-client:
            token:
              reuse-refresh-tokens: false
              access-token-time-to-live: 5m
              refresh-token-time-to-live: 30d
            registration:
              client-name: "public-client"
              client-id: "SECRET_public-client"
              client-secret: "SECRET_public-client"
              client-authentication-methods:
                - "client_secret_basic"
                - "client_secret_post"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "SECRET"
              post-logout-redirect-uris:
                - "SECRET"
              scopes:
                - "openid"
            require-authorization-consent: false
            require-proof-key: true
          user-server:
            token:
              access-token-time-to-live: 5m
            registration:
              client-name: "user-server"
              client-id: "SECRET_user-server"
              client-secret: "SECRET_user-server"
              client-authentication-methods:
                - "client_secret_basic"
                - "client_secret_post"
              authorization-grant-types:
                - "client_credentials"
              scopes:
                - "write:account"

# logging
logging:
  level:
    org.springframework.security: info

decorator:
  datasource:
    p6spy:
      enable-logging: false

jasypt:
  encryptor:
    password: "SECRET"

custom:
  front:
    domain: "SECRET"
    domain2: "SECRET"

########## springdoc ##########
springdoc:
  api-docs:
    path: /api/token/api-docs